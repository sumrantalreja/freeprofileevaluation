{"ast":null,"code":"// Rule-based evaluation logic for profile assessment\n\nexport const evaluateProfile = (quizResponses, goals, background) => {\n  const results = {\n    profileStrengthScore: calculateProfileStrength(quizResponses, goals, background),\n    skillMatch: calculateSkillMatch(quizResponses, goals, background),\n    skillGap: calculateSkillGap(quizResponses, goals, background),\n    toolRecommendations: getToolRecommendations(quizResponses, goals, background),\n    experienceBenchmarking: calculateExperienceBenchmark(quizResponses, goals, background),\n    salaryReadiness: calculateSalaryReadiness(quizResponses, goals, background),\n    interviewReadiness: calculateInterviewReadiness(quizResponses, goals, background),\n    peerComparison: calculatePeerComparison(quizResponses, goals, background),\n    likelihoodOfSuccess: calculateSuccessLikelihood(quizResponses, goals, background),\n    quickWins: getQuickWins(quizResponses, goals, background),\n    missedOpportunities: getMissedOpportunities(quizResponses, goals, background),\n    learningResource: getLearningResource(quizResponses, goals, background),\n    resumeScore: calculateResumeScore(quizResponses, goals, background),\n    badges: getBadges(quizResponses, goals, background),\n    recommendedRoles: getRecommendedRoles(goals.topicOfInterest, background)\n  };\n  return results;\n};\nconst calculateProfileStrength = (responses, goals, background) => {\n  let score = 0;\n  let maxScore = 100;\n  if (background === 'non-tech') {\n    // Experience weight: 30%\n    const experienceScore = getExperienceScore(responses.experience) * 0.3;\n\n    // Steps taken weight: 25%\n    const stepsScore = getStepsScore(responses.stepsTaken) * 0.25;\n\n    // Code comfort weight: 25%\n    const codeScore = getCodeComfortScore(responses.codeComfort) * 0.25;\n\n    // Time commitment weight: 20%\n    const timeScore = getTimeCommitmentScore(responses.timePerWeek) * 0.2;\n    score = (experienceScore + stepsScore + codeScore + timeScore) * 100;\n  } else {\n    // Experience weight: 25%\n    const experienceScore = getExperienceScore(responses.experience) * 0.25;\n\n    // Problem solving weight: 30%\n    const problemScore = getProblemSolvingScore(responses.problemSolving) * 0.3;\n\n    // System design weight: 20%\n    const systemScore = getSystemDesignScore(responses.systemDesign) * 0.2;\n\n    // Portfolio weight: 15%\n    const portfolioScore = getPortfolioScore(responses.portfolio) * 0.15;\n\n    // Mock interviews weight: 10%\n    const mockScore = getMockInterviewScore(responses.mockInterviews) * 0.1;\n    score = (experienceScore + problemScore + systemScore + portfolioScore + mockScore) * 100;\n  }\n  return Math.round(score);\n};\nconst getExperienceScore = experience => {\n  const scores = {\n    '0': 0.2,\n    '0-2': 0.4,\n    '3-5': 0.7,\n    '5+': 1.0\n  };\n  return scores[experience] || 0.2;\n};\nconst getStepsScore = steps => {\n  const scores = {\n    'just-exploring': 0.2,\n    'self-learning': 0.6,\n    'completed-course': 1.0\n  };\n  return scores[steps] || 0.2;\n};\nconst getCodeComfortScore = comfort => {\n  const scores = {\n    'havent-tried': 0.1,\n    'follow-tutorials': 0.4,\n    'solve-problems': 0.8\n  };\n  return scores[comfort] || 0.1;\n};\nconst getTimeCommitmentScore = time => {\n  const scores = {\n    '0-2': 0.2,\n    '3-5': 0.5,\n    '6-10': 0.8,\n    '10+': 1.0\n  };\n  return scores[time] || 0.2;\n};\nconst getProblemSolvingScore = problems => {\n  const scores = {\n    '0-10': 0.2,\n    '11-50': 0.5,\n    '51-100': 0.8,\n    '100+': 1.0\n  };\n  return scores[problems] || 0.2;\n};\nconst getSystemDesignScore = design => {\n  const scores = {\n    'not-yet': 0.1,\n    'once': 0.5,\n    'multiple': 1.0\n  };\n  return scores[design] || 0.1;\n};\nconst getPortfolioScore = portfolio => {\n  const scores = {\n    'none': 0.0,\n    'inactive': 0.2,\n    'limited-1-5': 0.5,\n    'active-5+': 1.0\n  };\n  return scores[portfolio] || 0.0;\n};\nconst getMockInterviewScore = mock => {\n  const scores = {\n    'never': 0.1,\n    'rarely': 0.3,\n    'monthly': 0.6,\n    'weekly+': 1.0\n  };\n  return scores[mock] || 0.1;\n};\nconst calculateSkillMatch = (responses, goals, background) => {\n  const skills = [];\n\n  // Add skills based on responses\n  if (responses.problemSolving === '100+' || responses.problemSolving === '51-100') {\n    skills.push('Problem Solving');\n  }\n  if (responses.systemDesign === 'multiple') {\n    skills.push('System Design');\n  }\n  if (responses.portfolio === 'active-5+') {\n    skills.push('Project Management');\n  }\n  if (responses.codeComfort === 'solve-problems') {\n    skills.push('Programming Fundamentals');\n  }\n  if (responses.stepsTaken === 'completed-course') {\n    skills.push('Structured Learning');\n  }\n  if (responses.mockInterviews === 'weekly+' || responses.mockInterviews === 'monthly') {\n    skills.push('Interview Skills');\n  }\n  if (responses.timePerWeek === '10+') {\n    skills.push('High Commitment');\n  }\n\n  // Add skills based on topics of interest\n  if (goals.topicOfInterest) {\n    goals.topicOfInterest.forEach(topic => {\n      switch (topic) {\n        case 'ai-ml':\n          skills.push('Machine Learning Interest');\n          break;\n        case 'web-development':\n          skills.push('Web Development Interest');\n          break;\n        case 'data-science':\n          skills.push('Data Analysis Interest');\n          break;\n        case 'cybersecurity':\n          skills.push('Security Awareness');\n          break;\n        case 'cloud-computing':\n          skills.push('Cloud Technologies Interest');\n          break;\n        default:\n          skills.push('Technology Interest');\n      }\n    });\n  }\n  return skills;\n};\nconst calculateSkillGap = (responses, goals, background) => {\n  const gaps = [];\n  if (background === 'non-tech') {\n    gaps.push('Programming Language Proficiency');\n    gaps.push('Technical Interview Skills');\n    gaps.push('Industry Knowledge');\n    if (responses.codeComfort === 'havent-tried') {\n      gaps.push('Basic Coding Skills');\n    }\n    if (responses.stepsTaken === 'just-exploring') {\n      gaps.push('Structured Learning');\n    }\n  } else {\n    gaps.push('Advanced System Design');\n    gaps.push('Leadership Experience');\n    if (responses.problemSolving === '0-10') {\n      gaps.push('Algorithm Practice');\n    }\n    if (responses.systemDesign === 'not-yet') {\n      gaps.push('System Design Experience');\n    }\n    if (responses.portfolio === 'none' || responses.portfolio === 'inactive') {\n      gaps.push('Portfolio Development');\n    }\n  }\n  return gaps;\n};\nconst getToolRecommendations = (responses, goals, background) => {\n  const tools = [];\n  if (background === 'non-tech') {\n    var _goals$targetRole, _goals$targetRole2, _goals$targetRole3;\n    tools.push('VS Code', 'Git', 'GitHub');\n    if ((_goals$targetRole = goals.targetRole) !== null && _goals$targetRole !== void 0 && _goals$targetRole.toLowerCase().includes('backend')) {\n      tools.push('Node.js', 'Python', 'PostgreSQL');\n    } else if ((_goals$targetRole2 = goals.targetRole) !== null && _goals$targetRole2 !== void 0 && _goals$targetRole2.toLowerCase().includes('frontend')) {\n      tools.push('React', 'HTML/CSS', 'JavaScript');\n    } else if ((_goals$targetRole3 = goals.targetRole) !== null && _goals$targetRole3 !== void 0 && _goals$targetRole3.toLowerCase().includes('data')) {\n      tools.push('Python', 'Jupyter', 'Pandas', 'SQL');\n    }\n  } else {\n    var _goals$targetRole4, _goals$targetRole5;\n    tools.push('Docker', 'AWS/GCP', 'CI/CD Tools');\n    if ((_goals$targetRole4 = goals.targetRole) !== null && _goals$targetRole4 !== void 0 && _goals$targetRole4.toLowerCase().includes('faang')) {\n      tools.push('LeetCode Premium', 'System Design Resources');\n    }\n    if ((_goals$targetRole5 = goals.targetRole) !== null && _goals$targetRole5 !== void 0 && _goals$targetRole5.toLowerCase().includes('data')) {\n      tools.push('TensorFlow', 'PyTorch', 'Apache Spark');\n    }\n  }\n  return tools;\n};\nconst calculateExperienceBenchmark = (responses, goals, background) => {\n  var _goals$targetRole6;\n  const experience = responses.experience;\n  const targetRole = ((_goals$targetRole6 = goals.targetRole) === null || _goals$targetRole6 === void 0 ? void 0 : _goals$targetRole6.toLowerCase()) || '';\n  let benchmark = {\n    current: experience,\n    typical: '3-5',\n    gap: 'moderate'\n  };\n  if (background === 'non-tech') {\n    if (targetRole.includes('senior') || targetRole.includes('lead')) {\n      benchmark.typical = '5+';\n      benchmark.gap = experience === '5+' ? 'none' : 'significant';\n    } else if (targetRole.includes('junior') || targetRole.includes('entry')) {\n      benchmark.typical = '0-2';\n      benchmark.gap = experience === '0' || experience === '0-2' ? 'none' : 'none';\n    }\n  } else {\n    if (targetRole.includes('faang')) {\n      benchmark.typical = '3-5';\n      benchmark.gap = experience === '3-5' || experience === '5+' ? 'none' : 'moderate';\n    }\n  }\n  return benchmark;\n};\nconst calculateSalaryReadiness = (responses, goals, background) => {\n  const targetSalary = goals.targetSalary;\n  const experience = responses.experience;\n  const profileStrength = calculateProfileStrength(responses, goals, background);\n  let readiness = {\n    current: 'below-market',\n    target: targetSalary,\n    gap: 'significant'\n  };\n  if (profileStrength >= 80) {\n    readiness.current = 'above-market';\n    readiness.gap = 'ready';\n  } else if (profileStrength >= 60) {\n    readiness.current = 'market-rate';\n    readiness.gap = 'moderate';\n  }\n  return readiness;\n};\nconst calculateInterviewReadiness = (responses, goals, background) => {\n  return {\n    resume: responses.portfolio === 'active-5+' ? 85 : 60,\n    technical: responses.problemSolving === '100+' ? 90 : responses.problemSolving === '51-100' ? 75 : 50,\n    hr: responses.experience === '5+' ? 80 : 65\n  };\n};\nconst calculatePeerComparison = (responses, goals, background) => {\n  const profileStrength = calculateProfileStrength(responses, goals, background);\n  return {\n    percentile: Math.round(profileStrength),\n    betterThan: Math.round(profileStrength),\n    description: profileStrength >= 80 ? 'Top 20%' : profileStrength >= 60 ? 'Above Average' : 'Below Average'\n  };\n};\nconst calculateSuccessLikelihood = (responses, goals, background) => {\n  const profileStrength = calculateProfileStrength(responses, goals, background);\n  const timeCommitment = responses.timePerWeek || responses.mockInterviews;\n  let likelihood = profileStrength;\n  if (timeCommitment === '10+' || timeCommitment === 'weekly+') {\n    likelihood += 10;\n  } else if (timeCommitment === '6-10' || timeCommitment === 'monthly') {\n    likelihood += 5;\n  }\n  return Math.min(Math.round(likelihood), 95);\n};\nconst getQuickWins = (responses, goals, background) => {\n  const wins = [];\n  if (background === 'non-tech') {\n    if (responses.codeComfort === 'havent-tried') {\n      wins.push('Start with basic coding tutorials');\n    }\n    if (responses.portfolio === 'none') {\n      wins.push('Create your first GitHub repository');\n    }\n    wins.push('Build a simple portfolio project');\n  } else {\n    if (responses.problemSolving === '0-10') {\n      wins.push('Solve 5 coding problems daily');\n    }\n    if (responses.systemDesign === 'not-yet') {\n      wins.push('Study one system design case per week');\n    }\n    if (responses.mockInterviews === 'never') {\n      wins.push('Schedule your first mock interview');\n    }\n  }\n  return wins.slice(0, 3);\n};\nconst getMissedOpportunities = (responses, goals, background) => {\n  const opportunities = [];\n  if (background === 'non-tech') {\n    if (responses.experience === '5+') {\n      opportunities.push('Senior roles in your current domain');\n      opportunities.push('Technical consulting positions');\n    }\n  } else {\n    if (responses.experience === '3-5' && responses.problemSolving === '100+') {\n      opportunities.push('Senior Developer positions');\n      opportunities.push('Tech Lead opportunities');\n    }\n  }\n  return opportunities;\n};\nconst getLearningResource = (responses, goals, background) => {\n  var _goals$targetRole7;\n  const targetRole = ((_goals$targetRole7 = goals.targetRole) === null || _goals$targetRole7 === void 0 ? void 0 : _goals$targetRole7.toLowerCase()) || '';\n  if (background === 'non-tech') {\n    if (targetRole.includes('backend')) {\n      return {\n        type: 'masterclass',\n        title: 'Backend Development Masterclass',\n        description: 'Learn Node.js, databases, and API development',\n        url: '#'\n      };\n    } else if (targetRole.includes('data')) {\n      return {\n        type: 'blog',\n        title: 'Data Science Career Guide',\n        description: 'Complete roadmap for data science transition',\n        url: '#'\n      };\n    }\n  } else {\n    if (targetRole.includes('faang')) {\n      return {\n        type: 'masterclass',\n        title: 'FAANG Interview Preparation',\n        description: 'System design and algorithm strategies',\n        url: '#'\n      };\n    }\n  }\n  return {\n    type: 'blog',\n    title: 'Tech Career Growth Guide',\n    description: 'Essential strategies for career advancement',\n    url: '#'\n  };\n};\nconst calculateResumeScore = (responses, goals, background) => {\n  let score = 50; // Base score\n\n  if (responses.portfolio === 'active-5+') score += 30;else if (responses.portfolio === 'limited-1-5') score += 15;\n  if (responses.experience === '5+') score += 15;else if (responses.experience === '3-5') score += 10;\n  if (background === 'tech' && responses.problemSolving === '100+') score += 5;\n  return Math.min(score, 100);\n};\nconst getBadges = (responses, goals, background) => {\n  const badges = [];\n  if (responses.portfolio === 'active-5+') {\n    badges.push({\n      name: 'Active Developer',\n      type: 'success'\n    });\n  }\n  if (background === 'tech' && responses.problemSolving === '100+') {\n    badges.push({\n      name: 'Problem Solver',\n      type: 'success'\n    });\n  }\n  if (background === 'non-tech' && responses.stepsTaken === 'completed-course') {\n    badges.push({\n      name: 'Committed Learner',\n      type: 'info'\n    });\n  }\n  if (responses.mockInterviews === 'weekly+') {\n    badges.push({\n      name: 'Interview Ready',\n      type: 'success'\n    });\n  }\n  if (responses.timePerWeek === '10+' || responses.mockInterviews === 'weekly+') {\n    badges.push({\n      name: 'Highly Motivated',\n      type: 'warning'\n    });\n  }\n\n  // Check for areas needing improvement\n  if (responses.portfolio === 'none' || responses.portfolio === 'inactive') {\n    badges.push({\n      name: 'Needs Portfolio',\n      type: 'error'\n    });\n  }\n  if (responses.codeComfort === 'havent-tried') {\n    badges.push({\n      name: 'Needs Coding Practice',\n      type: 'error'\n    });\n  }\n  return badges;\n};\nconst getRecommendedRoles = (topicOfInterest, background) => {\n  if (!topicOfInterest || topicOfInterest.length === 0) {\n    return [];\n  }\n  const roleMapping = {\n    'ai-ml': [{\n      role: 'Machine Learning Engineer',\n      level: 'Mid-Senior',\n      salary: '$120k-$180k'\n    }, {\n      role: 'Data Scientist',\n      level: 'Entry-Senior',\n      salary: '$90k-$150k'\n    }, {\n      role: 'AI Research Scientist',\n      level: 'Senior',\n      salary: '$150k-$250k'\n    }, {\n      role: 'MLOps Engineer',\n      level: 'Mid-Senior',\n      salary: '$110k-$170k'\n    }],\n    'web-development': [{\n      role: 'Frontend Developer',\n      level: 'Entry-Senior',\n      salary: '$70k-$140k'\n    }, {\n      role: 'Backend Developer',\n      level: 'Entry-Senior',\n      salary: '$80k-$150k'\n    }, {\n      role: 'Full-Stack Developer',\n      level: 'Mid-Senior',\n      salary: '$90k-$160k'\n    }, {\n      role: 'Web Development Lead',\n      level: 'Senior',\n      salary: '$120k-$200k'\n    }],\n    'mobile-development': [{\n      role: 'iOS Developer',\n      level: 'Entry-Senior',\n      salary: '$80k-$150k'\n    }, {\n      role: 'Android Developer',\n      level: 'Entry-Senior',\n      salary: '$75k-$140k'\n    }, {\n      role: 'React Native Developer',\n      level: 'Mid-Senior',\n      salary: '$85k-$155k'\n    }, {\n      role: 'Flutter Developer',\n      level: 'Mid-Senior',\n      salary: '$80k-$145k'\n    }],\n    'data-science': [{\n      role: 'Data Scientist',\n      level: 'Entry-Senior',\n      salary: '$90k-$150k'\n    }, {\n      role: 'Data Analyst',\n      level: 'Entry-Mid',\n      salary: '$60k-$100k'\n    }, {\n      role: 'Data Engineer',\n      level: 'Mid-Senior',\n      salary: '$100k-$160k'\n    }, {\n      role: 'Business Intelligence Analyst',\n      level: 'Entry-Mid',\n      salary: '$65k-$110k'\n    }],\n    'cybersecurity': [{\n      role: 'Cybersecurity Analyst',\n      level: 'Entry-Mid',\n      salary: '$70k-$120k'\n    }, {\n      role: 'Penetration Tester',\n      level: 'Mid-Senior',\n      salary: '$80k-$140k'\n    }, {\n      role: 'Security Engineer',\n      level: 'Mid-Senior',\n      salary: '$100k-$160k'\n    }, {\n      role: 'Cybersecurity Consultant',\n      level: 'Senior',\n      salary: '$120k-$200k'\n    }],\n    'cloud-computing': [{\n      role: 'Cloud Engineer',\n      level: 'Mid-Senior',\n      salary: '$90k-$150k'\n    }, {\n      role: 'DevOps Engineer',\n      level: 'Mid-Senior',\n      salary: '$100k-$160k'\n    }, {\n      role: 'Site Reliability Engineer',\n      level: 'Senior',\n      salary: '$120k-$180k'\n    }, {\n      role: 'Cloud Architect',\n      level: 'Senior',\n      salary: '$130k-$200k'\n    }],\n    'blockchain': [{\n      role: 'Blockchain Developer',\n      level: 'Mid-Senior',\n      salary: '$100k-$180k'\n    }, {\n      role: 'Smart Contract Developer',\n      level: 'Mid-Senior',\n      salary: '$110k-$190k'\n    }, {\n      role: 'Web3 Developer',\n      level: 'Mid-Senior',\n      salary: '$90k-$160k'\n    }, {\n      role: 'Blockchain Architect',\n      level: 'Senior',\n      salary: '$140k-$220k'\n    }],\n    'game-development': [{\n      role: 'Game Developer',\n      level: 'Entry-Senior',\n      salary: '$60k-$130k'\n    }, {\n      role: 'Game Designer',\n      level: 'Entry-Mid',\n      salary: '$50k-$100k'\n    }, {\n      role: 'Unity Developer',\n      level: 'Mid-Senior',\n      salary: '$70k-$120k'\n    }, {\n      role: 'Game Engine Developer',\n      level: 'Senior',\n      salary: '$100k-$160k'\n    }],\n    'iot': [{\n      role: 'IoT Developer',\n      level: 'Mid-Senior',\n      salary: '$80k-$140k'\n    }, {\n      role: 'Embedded Systems Engineer',\n      level: 'Mid-Senior',\n      salary: '$85k-$145k'\n    }, {\n      role: 'IoT Solutions Architect',\n      level: 'Senior',\n      salary: '$120k-$180k'\n    }, {\n      role: 'Hardware Engineer',\n      level: 'Mid-Senior',\n      salary: '$90k-$150k'\n    }],\n    'ar-vr': [{\n      role: 'AR/VR Developer',\n      level: 'Mid-Senior',\n      salary: '$90k-$150k'\n    }, {\n      role: 'Unity AR/VR Developer',\n      level: 'Mid-Senior',\n      salary: '$80k-$140k'\n    }, {\n      role: '3D Graphics Programmer',\n      level: 'Senior',\n      salary: '$100k-$160k'\n    }, {\n      role: 'XR Designer',\n      level: 'Mid-Senior',\n      salary: '$70k-$120k'\n    }],\n    'fintech': [{\n      role: 'Fintech Developer',\n      level: 'Mid-Senior',\n      salary: '$100k-$170k'\n    }, {\n      role: 'Payment Systems Engineer',\n      level: 'Mid-Senior',\n      salary: '$110k-$180k'\n    }, {\n      role: 'Financial Software Engineer',\n      level: 'Senior',\n      salary: '$120k-$190k'\n    }, {\n      role: 'Quantitative Developer',\n      level: 'Senior',\n      salary: '$130k-$220k'\n    }],\n    'healthtech': [{\n      role: 'Health Tech Developer',\n      level: 'Mid-Senior',\n      salary: '$90k-$150k'\n    }, {\n      role: 'Medical Software Engineer',\n      level: 'Senior',\n      salary: '$100k-$160k'\n    }, {\n      role: 'Digital Health Developer',\n      level: 'Mid-Senior',\n      salary: '$85k-$145k'\n    }, {\n      role: 'Telemedicine Engineer',\n      level: 'Mid-Senior',\n      salary: '$95k-$155k'\n    }],\n    'edtech': [{\n      role: 'EdTech Developer',\n      level: 'Mid-Senior',\n      salary: '$80k-$140k'\n    }, {\n      role: 'Learning Platform Engineer',\n      level: 'Mid-Senior',\n      salary: '$85k-$145k'\n    }, {\n      role: 'Educational Software Developer',\n      level: 'Senior',\n      salary: '$95k-$155k'\n    }, {\n      role: 'LMS Developer',\n      level: 'Mid-Senior',\n      salary: '$75k-$135k'\n    }],\n    'ecommerce': [{\n      role: 'E-commerce Developer',\n      level: 'Mid-Senior',\n      salary: '$85k-$145k'\n    }, {\n      role: 'Shopify Developer',\n      level: 'Mid-Senior',\n      salary: '$80k-$140k'\n    }, {\n      role: 'E-commerce Solutions Architect',\n      level: 'Senior',\n      salary: '$110k-$170k'\n    }, {\n      role: 'Digital Commerce Engineer',\n      level: 'Mid-Senior',\n      salary: '$90k-$150k'\n    }],\n    'automation': [{\n      role: 'Automation Engineer',\n      level: 'Mid-Senior',\n      salary: '$80k-$140k'\n    }, {\n      role: 'RPA Developer',\n      level: 'Mid-Senior',\n      salary: '$75k-$135k'\n    }, {\n      role: 'Process Automation Specialist',\n      level: 'Senior',\n      salary: '$95k-$155k'\n    }, {\n      role: 'Workflow Automation Engineer',\n      level: 'Mid-Senior',\n      salary: '$85k-$145k'\n    }]\n  };\n  const allRoles = [];\n  topicOfInterest.forEach(topic => {\n    if (roleMapping[topic]) {\n      allRoles.push(...roleMapping[topic]);\n    }\n  });\n\n  // Remove duplicates and limit to top 8 roles\n  const uniqueRoles = allRoles.filter((role, index, self) => index === self.findIndex(r => r.role === role.role)).slice(0, 8);\n  return uniqueRoles;\n};","map":{"version":3,"names":["evaluateProfile","quizResponses","goals","background","results","profileStrengthScore","calculateProfileStrength","skillMatch","calculateSkillMatch","skillGap","calculateSkillGap","toolRecommendations","getToolRecommendations","experienceBenchmarking","calculateExperienceBenchmark","salaryReadiness","calculateSalaryReadiness","interviewReadiness","calculateInterviewReadiness","peerComparison","calculatePeerComparison","likelihoodOfSuccess","calculateSuccessLikelihood","quickWins","getQuickWins","missedOpportunities","getMissedOpportunities","learningResource","getLearningResource","resumeScore","calculateResumeScore","badges","getBadges","recommendedRoles","getRecommendedRoles","topicOfInterest","responses","score","maxScore","experienceScore","getExperienceScore","experience","stepsScore","getStepsScore","stepsTaken","codeScore","getCodeComfortScore","codeComfort","timeScore","getTimeCommitmentScore","timePerWeek","problemScore","getProblemSolvingScore","problemSolving","systemScore","getSystemDesignScore","systemDesign","portfolioScore","getPortfolioScore","portfolio","mockScore","getMockInterviewScore","mockInterviews","Math","round","scores","steps","comfort","time","problems","design","mock","skills","push","forEach","topic","gaps","tools","_goals$targetRole","_goals$targetRole2","_goals$targetRole3","targetRole","toLowerCase","includes","_goals$targetRole4","_goals$targetRole5","_goals$targetRole6","benchmark","current","typical","gap","targetSalary","profileStrength","readiness","target","resume","technical","hr","percentile","betterThan","description","timeCommitment","likelihood","min","wins","slice","opportunities","_goals$targetRole7","type","title","url","name","length","roleMapping","role","level","salary","allRoles","uniqueRoles","filter","index","self","findIndex","r"],"sources":["/home/sumran/lalal/src/utils/evaluationLogic.js"],"sourcesContent":["// Rule-based evaluation logic for profile assessment\n\nexport const evaluateProfile = (quizResponses, goals, background) => {\n  const results = {\n    profileStrengthScore: calculateProfileStrength(quizResponses, goals, background),\n    skillMatch: calculateSkillMatch(quizResponses, goals, background),\n    skillGap: calculateSkillGap(quizResponses, goals, background),\n    toolRecommendations: getToolRecommendations(quizResponses, goals, background),\n    experienceBenchmarking: calculateExperienceBenchmark(quizResponses, goals, background),\n    salaryReadiness: calculateSalaryReadiness(quizResponses, goals, background),\n    interviewReadiness: calculateInterviewReadiness(quizResponses, goals, background),\n    peerComparison: calculatePeerComparison(quizResponses, goals, background),\n    likelihoodOfSuccess: calculateSuccessLikelihood(quizResponses, goals, background),\n    quickWins: getQuickWins(quizResponses, goals, background),\n    missedOpportunities: getMissedOpportunities(quizResponses, goals, background),\n    learningResource: getLearningResource(quizResponses, goals, background),\n    resumeScore: calculateResumeScore(quizResponses, goals, background),\n    badges: getBadges(quizResponses, goals, background),\n    recommendedRoles: getRecommendedRoles(goals.topicOfInterest, background)\n  };\n\n  return results;\n};\n\nconst calculateProfileStrength = (responses, goals, background) => {\n  let score = 0;\n  let maxScore = 100;\n\n  if (background === 'non-tech') {\n    // Experience weight: 30%\n    const experienceScore = getExperienceScore(responses.experience) * 0.3;\n    \n    // Steps taken weight: 25%\n    const stepsScore = getStepsScore(responses.stepsTaken) * 0.25;\n    \n    // Code comfort weight: 25%\n    const codeScore = getCodeComfortScore(responses.codeComfort) * 0.25;\n    \n    // Time commitment weight: 20%\n    const timeScore = getTimeCommitmentScore(responses.timePerWeek) * 0.2;\n\n    score = (experienceScore + stepsScore + codeScore + timeScore) * 100;\n  } else {\n    // Experience weight: 25%\n    const experienceScore = getExperienceScore(responses.experience) * 0.25;\n    \n    // Problem solving weight: 30%\n    const problemScore = getProblemSolvingScore(responses.problemSolving) * 0.3;\n    \n    // System design weight: 20%\n    const systemScore = getSystemDesignScore(responses.systemDesign) * 0.2;\n    \n    // Portfolio weight: 15%\n    const portfolioScore = getPortfolioScore(responses.portfolio) * 0.15;\n    \n    // Mock interviews weight: 10%\n    const mockScore = getMockInterviewScore(responses.mockInterviews) * 0.1;\n\n    score = (experienceScore + problemScore + systemScore + portfolioScore + mockScore) * 100;\n  }\n\n  return Math.round(score);\n};\n\nconst getExperienceScore = (experience) => {\n  const scores = {\n    '0': 0.2,\n    '0-2': 0.4,\n    '3-5': 0.7,\n    '5+': 1.0\n  };\n  return scores[experience] || 0.2;\n};\n\nconst getStepsScore = (steps) => {\n  const scores = {\n    'just-exploring': 0.2,\n    'self-learning': 0.6,\n    'completed-course': 1.0\n  };\n  return scores[steps] || 0.2;\n};\n\nconst getCodeComfortScore = (comfort) => {\n  const scores = {\n    'havent-tried': 0.1,\n    'follow-tutorials': 0.4,\n    'solve-problems': 0.8\n  };\n  return scores[comfort] || 0.1;\n};\n\nconst getTimeCommitmentScore = (time) => {\n  const scores = {\n    '0-2': 0.2,\n    '3-5': 0.5,\n    '6-10': 0.8,\n    '10+': 1.0\n  };\n  return scores[time] || 0.2;\n};\n\nconst getProblemSolvingScore = (problems) => {\n  const scores = {\n    '0-10': 0.2,\n    '11-50': 0.5,\n    '51-100': 0.8,\n    '100+': 1.0\n  };\n  return scores[problems] || 0.2;\n};\n\nconst getSystemDesignScore = (design) => {\n  const scores = {\n    'not-yet': 0.1,\n    'once': 0.5,\n    'multiple': 1.0\n  };\n  return scores[design] || 0.1;\n};\n\nconst getPortfolioScore = (portfolio) => {\n  const scores = {\n    'none': 0.0,\n    'inactive': 0.2,\n    'limited-1-5': 0.5,\n    'active-5+': 1.0\n  };\n  return scores[portfolio] || 0.0;\n};\n\nconst getMockInterviewScore = (mock) => {\n  const scores = {\n    'never': 0.1,\n    'rarely': 0.3,\n    'monthly': 0.6,\n    'weekly+': 1.0\n  };\n  return scores[mock] || 0.1;\n};\n\nconst calculateSkillMatch = (responses, goals, background) => {\n  const skills = [];\n\n  // Add skills based on responses\n  if (responses.problemSolving === '100+' || responses.problemSolving === '51-100') {\n    skills.push('Problem Solving');\n  }\n  if (responses.systemDesign === 'multiple') {\n    skills.push('System Design');\n  }\n  if (responses.portfolio === 'active-5+') {\n    skills.push('Project Management');\n  }\n  if (responses.codeComfort === 'solve-problems') {\n    skills.push('Programming Fundamentals');\n  }\n  if (responses.stepsTaken === 'completed-course') {\n    skills.push('Structured Learning');\n  }\n  if (responses.mockInterviews === 'weekly+' || responses.mockInterviews === 'monthly') {\n    skills.push('Interview Skills');\n  }\n  if (responses.timePerWeek === '10+') {\n    skills.push('High Commitment');\n  }\n\n  // Add skills based on topics of interest\n  if (goals.topicOfInterest) {\n    goals.topicOfInterest.forEach(topic => {\n      switch(topic) {\n        case 'ai-ml':\n          skills.push('Machine Learning Interest');\n          break;\n        case 'web-development':\n          skills.push('Web Development Interest');\n          break;\n        case 'data-science':\n          skills.push('Data Analysis Interest');\n          break;\n        case 'cybersecurity':\n          skills.push('Security Awareness');\n          break;\n        case 'cloud-computing':\n          skills.push('Cloud Technologies Interest');\n          break;\n        default:\n          skills.push('Technology Interest');\n      }\n    });\n  }\n\n  return skills;\n};\n\nconst calculateSkillGap = (responses, goals, background) => {\n  const gaps = [];\n\n  if (background === 'non-tech') {\n    gaps.push('Programming Language Proficiency');\n    gaps.push('Technical Interview Skills');\n    gaps.push('Industry Knowledge');\n    \n    if (responses.codeComfort === 'havent-tried') {\n      gaps.push('Basic Coding Skills');\n    }\n    if (responses.stepsTaken === 'just-exploring') {\n      gaps.push('Structured Learning');\n    }\n  } else {\n    gaps.push('Advanced System Design');\n    gaps.push('Leadership Experience');\n    \n    if (responses.problemSolving === '0-10') {\n      gaps.push('Algorithm Practice');\n    }\n    if (responses.systemDesign === 'not-yet') {\n      gaps.push('System Design Experience');\n    }\n    if (responses.portfolio === 'none' || responses.portfolio === 'inactive') {\n      gaps.push('Portfolio Development');\n    }\n  }\n\n  return gaps;\n};\n\nconst getToolRecommendations = (responses, goals, background) => {\n  const tools = [];\n\n  if (background === 'non-tech') {\n    tools.push('VS Code', 'Git', 'GitHub');\n    if (goals.targetRole?.toLowerCase().includes('backend')) {\n      tools.push('Node.js', 'Python', 'PostgreSQL');\n    } else if (goals.targetRole?.toLowerCase().includes('frontend')) {\n      tools.push('React', 'HTML/CSS', 'JavaScript');\n    } else if (goals.targetRole?.toLowerCase().includes('data')) {\n      tools.push('Python', 'Jupyter', 'Pandas', 'SQL');\n    }\n  } else {\n    tools.push('Docker', 'AWS/GCP', 'CI/CD Tools');\n    if (goals.targetRole?.toLowerCase().includes('faang')) {\n      tools.push('LeetCode Premium', 'System Design Resources');\n    }\n    if (goals.targetRole?.toLowerCase().includes('data')) {\n      tools.push('TensorFlow', 'PyTorch', 'Apache Spark');\n    }\n  }\n\n  return tools;\n};\n\nconst calculateExperienceBenchmark = (responses, goals, background) => {\n  const experience = responses.experience;\n  const targetRole = goals.targetRole?.toLowerCase() || '';\n\n  let benchmark = {\n    current: experience,\n    typical: '3-5',\n    gap: 'moderate'\n  };\n\n  if (background === 'non-tech') {\n    if (targetRole.includes('senior') || targetRole.includes('lead')) {\n      benchmark.typical = '5+';\n      benchmark.gap = experience === '5+' ? 'none' : 'significant';\n    } else if (targetRole.includes('junior') || targetRole.includes('entry')) {\n      benchmark.typical = '0-2';\n      benchmark.gap = experience === '0' || experience === '0-2' ? 'none' : 'none';\n    }\n  } else {\n    if (targetRole.includes('faang')) {\n      benchmark.typical = '3-5';\n      benchmark.gap = experience === '3-5' || experience === '5+' ? 'none' : 'moderate';\n    }\n  }\n\n  return benchmark;\n};\n\nconst calculateSalaryReadiness = (responses, goals, background) => {\n  const targetSalary = goals.targetSalary;\n  const experience = responses.experience;\n  const profileStrength = calculateProfileStrength(responses, goals, background);\n\n  let readiness = {\n    current: 'below-market',\n    target: targetSalary,\n    gap: 'significant'\n  };\n\n  if (profileStrength >= 80) {\n    readiness.current = 'above-market';\n    readiness.gap = 'ready';\n  } else if (profileStrength >= 60) {\n    readiness.current = 'market-rate';\n    readiness.gap = 'moderate';\n  }\n\n  return readiness;\n};\n\nconst calculateInterviewReadiness = (responses, goals, background) => {\n  return {\n    resume: responses.portfolio === 'active-5+' ? 85 : 60,\n    technical: responses.problemSolving === '100+' ? 90 : \n              responses.problemSolving === '51-100' ? 75 : 50,\n    hr: responses.experience === '5+' ? 80 : 65\n  };\n};\n\nconst calculatePeerComparison = (responses, goals, background) => {\n  const profileStrength = calculateProfileStrength(responses, goals, background);\n  \n  return {\n    percentile: Math.round(profileStrength),\n    betterThan: Math.round(profileStrength),\n    description: profileStrength >= 80 ? 'Top 20%' : \n                 profileStrength >= 60 ? 'Above Average' : 'Below Average'\n  };\n};\n\nconst calculateSuccessLikelihood = (responses, goals, background) => {\n  const profileStrength = calculateProfileStrength(responses, goals, background);\n  const timeCommitment = responses.timePerWeek || responses.mockInterviews;\n  \n  let likelihood = profileStrength;\n  \n  if (timeCommitment === '10+' || timeCommitment === 'weekly+') {\n    likelihood += 10;\n  } else if (timeCommitment === '6-10' || timeCommitment === 'monthly') {\n    likelihood += 5;\n  }\n\n  return Math.min(Math.round(likelihood), 95);\n};\n\nconst getQuickWins = (responses, goals, background) => {\n  const wins = [];\n\n  if (background === 'non-tech') {\n    if (responses.codeComfort === 'havent-tried') {\n      wins.push('Start with basic coding tutorials');\n    }\n    if (responses.portfolio === 'none') {\n      wins.push('Create your first GitHub repository');\n    }\n    wins.push('Build a simple portfolio project');\n  } else {\n    if (responses.problemSolving === '0-10') {\n      wins.push('Solve 5 coding problems daily');\n    }\n    if (responses.systemDesign === 'not-yet') {\n      wins.push('Study one system design case per week');\n    }\n    if (responses.mockInterviews === 'never') {\n      wins.push('Schedule your first mock interview');\n    }\n  }\n\n  return wins.slice(0, 3);\n};\n\nconst getMissedOpportunities = (responses, goals, background) => {\n  const opportunities = [];\n\n  if (background === 'non-tech') {\n    if (responses.experience === '5+') {\n      opportunities.push('Senior roles in your current domain');\n      opportunities.push('Technical consulting positions');\n    }\n  } else {\n    if (responses.experience === '3-5' && responses.problemSolving === '100+') {\n      opportunities.push('Senior Developer positions');\n      opportunities.push('Tech Lead opportunities');\n    }\n  }\n\n  return opportunities;\n};\n\nconst getLearningResource = (responses, goals, background) => {\n  const targetRole = goals.targetRole?.toLowerCase() || '';\n  \n  if (background === 'non-tech') {\n    if (targetRole.includes('backend')) {\n      return {\n        type: 'masterclass',\n        title: 'Backend Development Masterclass',\n        description: 'Learn Node.js, databases, and API development',\n        url: '#'\n      };\n    } else if (targetRole.includes('data')) {\n      return {\n        type: 'blog',\n        title: 'Data Science Career Guide',\n        description: 'Complete roadmap for data science transition',\n        url: '#'\n      };\n    }\n  } else {\n    if (targetRole.includes('faang')) {\n      return {\n        type: 'masterclass',\n        title: 'FAANG Interview Preparation',\n        description: 'System design and algorithm strategies',\n        url: '#'\n      };\n    }\n  }\n\n  return {\n    type: 'blog',\n    title: 'Tech Career Growth Guide',\n    description: 'Essential strategies for career advancement',\n    url: '#'\n  };\n};\n\nconst calculateResumeScore = (responses, goals, background) => {\n  let score = 50; // Base score\n\n  if (responses.portfolio === 'active-5+') score += 30;\n  else if (responses.portfolio === 'limited-1-5') score += 15;\n\n  if (responses.experience === '5+') score += 15;\n  else if (responses.experience === '3-5') score += 10;\n\n  if (background === 'tech' && responses.problemSolving === '100+') score += 5;\n\n  return Math.min(score, 100);\n};\n\nconst getBadges = (responses, goals, background) => {\n  const badges = [];\n\n  if (responses.portfolio === 'active-5+') {\n    badges.push({ name: 'Active Developer', type: 'success' });\n  }\n\n  if (background === 'tech' && responses.problemSolving === '100+') {\n    badges.push({ name: 'Problem Solver', type: 'success' });\n  }\n\n  if (background === 'non-tech' && responses.stepsTaken === 'completed-course') {\n    badges.push({ name: 'Committed Learner', type: 'info' });\n  }\n\n  if (responses.mockInterviews === 'weekly+') {\n    badges.push({ name: 'Interview Ready', type: 'success' });\n  }\n\n  if (responses.timePerWeek === '10+' || responses.mockInterviews === 'weekly+') {\n    badges.push({ name: 'Highly Motivated', type: 'warning' });\n  }\n\n  // Check for areas needing improvement\n  if (responses.portfolio === 'none' || responses.portfolio === 'inactive') {\n    badges.push({ name: 'Needs Portfolio', type: 'error' });\n  }\n\n  if (responses.codeComfort === 'havent-tried') {\n    badges.push({ name: 'Needs Coding Practice', type: 'error' });\n  }\n\n  return badges;\n};\n\nconst getRecommendedRoles = (topicOfInterest, background) => {\n  if (!topicOfInterest || topicOfInterest.length === 0) {\n    return [];\n  }\n\n  const roleMapping = {\n    'ai-ml': [\n      { role: 'Machine Learning Engineer', level: 'Mid-Senior', salary: '$120k-$180k' },\n      { role: 'Data Scientist', level: 'Entry-Senior', salary: '$90k-$150k' },\n      { role: 'AI Research Scientist', level: 'Senior', salary: '$150k-$250k' },\n      { role: 'MLOps Engineer', level: 'Mid-Senior', salary: '$110k-$170k' }\n    ],\n    'web-development': [\n      { role: 'Frontend Developer', level: 'Entry-Senior', salary: '$70k-$140k' },\n      { role: 'Backend Developer', level: 'Entry-Senior', salary: '$80k-$150k' },\n      { role: 'Full-Stack Developer', level: 'Mid-Senior', salary: '$90k-$160k' },\n      { role: 'Web Development Lead', level: 'Senior', salary: '$120k-$200k' }\n    ],\n    'mobile-development': [\n      { role: 'iOS Developer', level: 'Entry-Senior', salary: '$80k-$150k' },\n      { role: 'Android Developer', level: 'Entry-Senior', salary: '$75k-$140k' },\n      { role: 'React Native Developer', level: 'Mid-Senior', salary: '$85k-$155k' },\n      { role: 'Flutter Developer', level: 'Mid-Senior', salary: '$80k-$145k' }\n    ],\n    'data-science': [\n      { role: 'Data Scientist', level: 'Entry-Senior', salary: '$90k-$150k' },\n      { role: 'Data Analyst', level: 'Entry-Mid', salary: '$60k-$100k' },\n      { role: 'Data Engineer', level: 'Mid-Senior', salary: '$100k-$160k' },\n      { role: 'Business Intelligence Analyst', level: 'Entry-Mid', salary: '$65k-$110k' }\n    ],\n    'cybersecurity': [\n      { role: 'Cybersecurity Analyst', level: 'Entry-Mid', salary: '$70k-$120k' },\n      { role: 'Penetration Tester', level: 'Mid-Senior', salary: '$80k-$140k' },\n      { role: 'Security Engineer', level: 'Mid-Senior', salary: '$100k-$160k' },\n      { role: 'Cybersecurity Consultant', level: 'Senior', salary: '$120k-$200k' }\n    ],\n    'cloud-computing': [\n      { role: 'Cloud Engineer', level: 'Mid-Senior', salary: '$90k-$150k' },\n      { role: 'DevOps Engineer', level: 'Mid-Senior', salary: '$100k-$160k' },\n      { role: 'Site Reliability Engineer', level: 'Senior', salary: '$120k-$180k' },\n      { role: 'Cloud Architect', level: 'Senior', salary: '$130k-$200k' }\n    ],\n    'blockchain': [\n      { role: 'Blockchain Developer', level: 'Mid-Senior', salary: '$100k-$180k' },\n      { role: 'Smart Contract Developer', level: 'Mid-Senior', salary: '$110k-$190k' },\n      { role: 'Web3 Developer', level: 'Mid-Senior', salary: '$90k-$160k' },\n      { role: 'Blockchain Architect', level: 'Senior', salary: '$140k-$220k' }\n    ],\n    'game-development': [\n      { role: 'Game Developer', level: 'Entry-Senior', salary: '$60k-$130k' },\n      { role: 'Game Designer', level: 'Entry-Mid', salary: '$50k-$100k' },\n      { role: 'Unity Developer', level: 'Mid-Senior', salary: '$70k-$120k' },\n      { role: 'Game Engine Developer', level: 'Senior', salary: '$100k-$160k' }\n    ],\n    'iot': [\n      { role: 'IoT Developer', level: 'Mid-Senior', salary: '$80k-$140k' },\n      { role: 'Embedded Systems Engineer', level: 'Mid-Senior', salary: '$85k-$145k' },\n      { role: 'IoT Solutions Architect', level: 'Senior', salary: '$120k-$180k' },\n      { role: 'Hardware Engineer', level: 'Mid-Senior', salary: '$90k-$150k' }\n    ],\n    'ar-vr': [\n      { role: 'AR/VR Developer', level: 'Mid-Senior', salary: '$90k-$150k' },\n      { role: 'Unity AR/VR Developer', level: 'Mid-Senior', salary: '$80k-$140k' },\n      { role: '3D Graphics Programmer', level: 'Senior', salary: '$100k-$160k' },\n      { role: 'XR Designer', level: 'Mid-Senior', salary: '$70k-$120k' }\n    ],\n    'fintech': [\n      { role: 'Fintech Developer', level: 'Mid-Senior', salary: '$100k-$170k' },\n      { role: 'Payment Systems Engineer', level: 'Mid-Senior', salary: '$110k-$180k' },\n      { role: 'Financial Software Engineer', level: 'Senior', salary: '$120k-$190k' },\n      { role: 'Quantitative Developer', level: 'Senior', salary: '$130k-$220k' }\n    ],\n    'healthtech': [\n      { role: 'Health Tech Developer', level: 'Mid-Senior', salary: '$90k-$150k' },\n      { role: 'Medical Software Engineer', level: 'Senior', salary: '$100k-$160k' },\n      { role: 'Digital Health Developer', level: 'Mid-Senior', salary: '$85k-$145k' },\n      { role: 'Telemedicine Engineer', level: 'Mid-Senior', salary: '$95k-$155k' }\n    ],\n    'edtech': [\n      { role: 'EdTech Developer', level: 'Mid-Senior', salary: '$80k-$140k' },\n      { role: 'Learning Platform Engineer', level: 'Mid-Senior', salary: '$85k-$145k' },\n      { role: 'Educational Software Developer', level: 'Senior', salary: '$95k-$155k' },\n      { role: 'LMS Developer', level: 'Mid-Senior', salary: '$75k-$135k' }\n    ],\n    'ecommerce': [\n      { role: 'E-commerce Developer', level: 'Mid-Senior', salary: '$85k-$145k' },\n      { role: 'Shopify Developer', level: 'Mid-Senior', salary: '$80k-$140k' },\n      { role: 'E-commerce Solutions Architect', level: 'Senior', salary: '$110k-$170k' },\n      { role: 'Digital Commerce Engineer', level: 'Mid-Senior', salary: '$90k-$150k' }\n    ],\n    'automation': [\n      { role: 'Automation Engineer', level: 'Mid-Senior', salary: '$80k-$140k' },\n      { role: 'RPA Developer', level: 'Mid-Senior', salary: '$75k-$135k' },\n      { role: 'Process Automation Specialist', level: 'Senior', salary: '$95k-$155k' },\n      { role: 'Workflow Automation Engineer', level: 'Mid-Senior', salary: '$85k-$145k' }\n    ]\n  };\n\n  const allRoles = [];\n  \n  topicOfInterest.forEach(topic => {\n    if (roleMapping[topic]) {\n      allRoles.push(...roleMapping[topic]);\n    }\n  });\n\n  // Remove duplicates and limit to top 8 roles\n  const uniqueRoles = allRoles.filter((role, index, self) => \n    index === self.findIndex(r => r.role === role.role)\n  ).slice(0, 8);\n\n  return uniqueRoles;\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}