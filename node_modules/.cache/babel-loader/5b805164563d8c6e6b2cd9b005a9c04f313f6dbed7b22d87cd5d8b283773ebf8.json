{"ast":null,"code":"import _objectSpread from \"/home/sumran/lalal/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"/home/sumran/lalal/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nconst _excluded = [\"transition\", \"transitionEnd\"];\nimport { useState, useEffect } from 'react';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { getOrigin, checkTargetForNewValues } from '../../render/utils/setters.mjs';\nimport { animateVisualElement } from '../../render/utils/animation.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { VisualElement } from '../../render/VisualElement.mjs';\nconst createObject = () => ({});\nclass StateVisualElement extends VisualElement {\n  build() {}\n  measureInstanceViewportBox() {\n    return createBox();\n  }\n  resetTransform() {}\n  restoreTransform() {}\n  removeValueFromRenderState() {}\n  renderInstance() {}\n  scrapeMotionValuesFromProps() {\n    return createObject();\n  }\n  getBaseTargetFromProps() {\n    return undefined;\n  }\n  readValueFromInstance(_state, key, options) {\n    return options.initialState[key] || 0;\n  }\n  sortInstanceNodePosition() {\n    return 0;\n  }\n  makeTargetAnimatableFromInstance(_ref) {\n    let {\n        transition,\n        transitionEnd\n      } = _ref,\n      target = _objectWithoutProperties(_ref, _excluded);\n    const origin = getOrigin(target, transition || {}, this);\n    checkTargetForNewValues(this, target, origin);\n    return _objectSpread({\n      transition,\n      transitionEnd\n    }, target);\n  }\n}\nconst useVisualState = makeUseVisualState({\n  scrapeMotionValuesFromProps: createObject,\n  createRenderState: createObject\n});\n/**\n * This is not an officially supported API and may be removed\n * on any version.\n */\nfunction useAnimatedState(initialState) {\n  const [animationState, setAnimationState] = useState(initialState);\n  const visualState = useVisualState({}, false);\n  const element = useConstant(() => {\n    return new StateVisualElement({\n      props: {},\n      visualState\n    }, {\n      initialState\n    });\n  });\n  useEffect(() => {\n    element.mount({});\n    return () => element.unmount();\n  }, [element]);\n  useEffect(() => {\n    element.setProps({\n      onUpdate: v => {\n        setAnimationState(_objectSpread({}, v));\n      }\n    });\n  }, [setAnimationState, element]);\n  const startAnimation = useConstant(() => animationDefinition => {\n    return animateVisualElement(element, animationDefinition);\n  });\n  return [animationState, startAnimation];\n}\nexport { useAnimatedState };","map":{"version":3,"names":["useState","useEffect","useConstant","getOrigin","checkTargetForNewValues","animateVisualElement","makeUseVisualState","createBox","VisualElement","createObject","StateVisualElement","build","measureInstanceViewportBox","resetTransform","restoreTransform","removeValueFromRenderState","renderInstance","scrapeMotionValuesFromProps","getBaseTargetFromProps","undefined","readValueFromInstance","_state","key","options","initialState","sortInstanceNodePosition","makeTargetAnimatableFromInstance","_ref","transition","transitionEnd","target","_objectWithoutProperties","_excluded","origin","_objectSpread","useVisualState","createRenderState","useAnimatedState","animationState","setAnimationState","visualState","element","props","mount","unmount","setProps","onUpdate","v","startAnimation","animationDefinition"],"sources":["/home/sumran/lalal/node_modules/framer-motion/dist/es/animation/hooks/use-animated-state.mjs"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { getOrigin, checkTargetForNewValues } from '../../render/utils/setters.mjs';\nimport { animateVisualElement } from '../../render/utils/animation.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { VisualElement } from '../../render/VisualElement.mjs';\n\nconst createObject = () => ({});\nclass StateVisualElement extends VisualElement {\n    build() { }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    resetTransform() { }\n    restoreTransform() { }\n    removeValueFromRenderState() { }\n    renderInstance() { }\n    scrapeMotionValuesFromProps() {\n        return createObject();\n    }\n    getBaseTargetFromProps() {\n        return undefined;\n    }\n    readValueFromInstance(_state, key, options) {\n        return options.initialState[key] || 0;\n    }\n    sortInstanceNodePosition() {\n        return 0;\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }) {\n        const origin = getOrigin(target, transition || {}, this);\n        checkTargetForNewValues(this, target, origin);\n        return { transition, transitionEnd, ...target };\n    }\n}\nconst useVisualState = makeUseVisualState({\n    scrapeMotionValuesFromProps: createObject,\n    createRenderState: createObject,\n});\n/**\n * This is not an officially supported API and may be removed\n * on any version.\n */\nfunction useAnimatedState(initialState) {\n    const [animationState, setAnimationState] = useState(initialState);\n    const visualState = useVisualState({}, false);\n    const element = useConstant(() => {\n        return new StateVisualElement({ props: {}, visualState }, { initialState });\n    });\n    useEffect(() => {\n        element.mount({});\n        return () => element.unmount();\n    }, [element]);\n    useEffect(() => {\n        element.setProps({\n            onUpdate: (v) => {\n                setAnimationState({ ...v });\n            },\n        });\n    }, [setAnimationState, element]);\n    const startAnimation = useConstant(() => (animationDefinition) => {\n        return animateVisualElement(element, animationDefinition);\n    });\n    return [animationState, startAnimation];\n}\n\nexport { useAnimatedState };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}