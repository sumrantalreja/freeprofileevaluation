{"ast":null,"code":"var _jsxFileName = \"/home/sumran/lalal/src/context/ProfileContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useReducer } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProfileContext = /*#__PURE__*/createContext();\nconst initialState = {\n  // Quiz responses\n  background: null,\n  // 'non-tech' or 'tech'\n  quizResponses: {},\n  // Goals and requirements\n  goals: {\n    requirementType: [],\n    targetCompany: '',\n    topicOfInterest: []\n  },\n  // Evaluation results\n  evaluationResults: null\n};\nconst profileReducer = (state, action) => {\n  switch (action.type) {\n    case 'SET_BACKGROUND':\n      return {\n        ...state,\n        background: action.payload\n      };\n    case 'SET_QUIZ_RESPONSE':\n      return {\n        ...state,\n        quizResponses: {\n          ...state.quizResponses,\n          [action.payload.question]: action.payload.answer\n        }\n      };\n    case 'SET_GOALS':\n      return {\n        ...state,\n        goals: {\n          ...state.goals,\n          ...action.payload\n        }\n      };\n    case 'SET_EVALUATION_RESULTS':\n      return {\n        ...state,\n        evaluationResults: action.payload\n      };\n    case 'RESET_PROFILE':\n      return initialState;\n    default:\n      return state;\n  }\n};\nexport const ProfileProvider = ({\n  children\n}) => {\n  _s();\n  const [state, dispatch] = useReducer(profileReducer, initialState);\n  const setBackground = background => {\n    dispatch({\n      type: 'SET_BACKGROUND',\n      payload: background\n    });\n  };\n  const setQuizResponse = (question, answer) => {\n    dispatch({\n      type: 'SET_QUIZ_RESPONSE',\n      payload: {\n        question,\n        answer\n      }\n    });\n  };\n  const setGoals = goals => {\n    dispatch({\n      type: 'SET_GOALS',\n      payload: goals\n    });\n  };\n  const setEvaluationResults = results => {\n    dispatch({\n      type: 'SET_EVALUATION_RESULTS',\n      payload: results\n    });\n  };\n  const resetProfile = () => {\n    dispatch({\n      type: 'RESET_PROFILE'\n    });\n  };\n  const value = {\n    ...state,\n    setBackground,\n    setQuizResponse,\n    setGoals,\n    setEvaluationResults,\n    resetProfile\n  };\n  return /*#__PURE__*/_jsxDEV(ProfileContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n};\n_s(ProfileProvider, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n_c = ProfileProvider;\nexport const useProfile = () => {\n  _s2();\n  const context = useContext(ProfileContext);\n  if (!context) {\n    throw new Error('useProfile must be used within a ProfileProvider');\n  }\n  return context;\n};\n_s2(useProfile, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"ProfileProvider\");","map":{"version":3,"names":["React","createContext","useContext","useReducer","jsxDEV","_jsxDEV","ProfileContext","initialState","background","quizResponses","goals","requirementType","targetCompany","topicOfInterest","evaluationResults","profileReducer","state","action","type","payload","question","answer","ProfileProvider","children","_s","dispatch","setBackground","setQuizResponse","setGoals","setEvaluationResults","results","resetProfile","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useProfile","_s2","context","Error","$RefreshReg$"],"sources":["/home/sumran/lalal/src/context/ProfileContext.js"],"sourcesContent":["import React, { createContext, useContext, useReducer } from 'react';\n\nconst ProfileContext = createContext();\n\nconst initialState = {\n  // Quiz responses\n  background: null, // 'non-tech' or 'tech'\n  quizResponses: {},\n  \n  // Goals and requirements\n  goals: {\n    requirementType: [],\n    targetCompany: '',\n    topicOfInterest: []\n  },\n  \n  // Evaluation results\n  evaluationResults: null\n};\n\nconst profileReducer = (state, action) => {\n  switch (action.type) {\n    case 'SET_BACKGROUND':\n      return {\n        ...state,\n        background: action.payload\n      };\n    \n    case 'SET_QUIZ_RESPONSE':\n      return {\n        ...state,\n        quizResponses: {\n          ...state.quizResponses,\n          [action.payload.question]: action.payload.answer\n        }\n      };\n    \n    case 'SET_GOALS':\n      return {\n        ...state,\n        goals: {\n          ...state.goals,\n          ...action.payload\n        }\n      };\n    \n    case 'SET_EVALUATION_RESULTS':\n      return {\n        ...state,\n        evaluationResults: action.payload\n      };\n    \n    case 'RESET_PROFILE':\n      return initialState;\n    \n    default:\n      return state;\n  }\n};\n\nexport const ProfileProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(profileReducer, initialState);\n\n  const setBackground = (background) => {\n    dispatch({ type: 'SET_BACKGROUND', payload: background });\n  };\n\n  const setQuizResponse = (question, answer) => {\n    dispatch({ type: 'SET_QUIZ_RESPONSE', payload: { question, answer } });\n  };\n\n  const setGoals = (goals) => {\n    dispatch({ type: 'SET_GOALS', payload: goals });\n  };\n\n  const setEvaluationResults = (results) => {\n    dispatch({ type: 'SET_EVALUATION_RESULTS', payload: results });\n  };\n\n  const resetProfile = () => {\n    dispatch({ type: 'RESET_PROFILE' });\n  };\n\n  const value = {\n    ...state,\n    setBackground,\n    setQuizResponse,\n    setGoals,\n    setEvaluationResults,\n    resetProfile\n  };\n\n  return (\n    <ProfileContext.Provider value={value}>\n      {children}\n    </ProfileContext.Provider>\n  );\n};\n\nexport const useProfile = () => {\n  const context = useContext(ProfileContext);\n  if (!context) {\n    throw new Error('useProfile must be used within a ProfileProvider');\n  }\n  return context;\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}